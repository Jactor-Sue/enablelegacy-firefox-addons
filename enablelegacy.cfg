// First line must be a comment.

// In Firefox 55+, settings to configure add-on signing (and legacy add-ons) are stored in AddonSettings.jsm
// The module exports an object with read-only properties, but that is not an issue since we can just replace
// the exported object.
// https://searchfox.org/mozilla-central/rev/2e08acdf8862e68b13166970e17809a3b5d6a555/toolkit/mozapps/extensions/internal/AddonSettings.jsm

Components.utils.import("resource://gre/modules/XPCOMUtils.jsm");

var XPIProviderModule = Components.utils.import("resource://gre/modules/addons/XPIProvider.jsm", {});

// Note: we read the data from preferences instead of hard-coding a "true", so
// that by default legacy add-ons are disabled. This enables the user to only
// enable legacy add-ons for specific Firefox profiles when really needed.
var AddonSettings = Object.create(XPIProviderModule.AddonSettings);
XPCOMUtils.defineLazyPreferenceGetter(AddonSettings, "REQUIRE_SIGNING", "xpinstall.signatures.required", false);
XPCOMUtils.defineLazyPreferenceGetter(AddonSettings, "ALLOW_LEGACY_EXTENSIONS", "extensions.legacy.enabled", true);

XPIProviderModule.AddonSettings = AddonSettings;

Components.classes['@mozilla.org/consoleservice;1']
.getService(Components.interfaces.nsIConsoleService)
.logStringMessage("mozilla.cfg: the extensions.legacy.enabled preference is working again.");
